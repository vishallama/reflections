Q. When would you want to use a remote repository rather than keeping all your work local?

A. We would want to use a remote repository in the following scenarios:
   (1) If multiple people contribute to the same repository, then it is in fact 
even necessary to maintain a remote repository so that those people can push or 
pull from such a repository. This also enables each of those contributors to keep 
their work synced with those of others'.
   (2) In the case of a local machine failure, local data corruption, and other 
such scenarios, it doesn't make sense to keep all of one's work in a local machine. Such work could easily get lost when the aforesaid scenarios occur.

Q. Why might you want to always pull changes manually rather than having Git 
automatically stay up-to-date with your remote repository?

A. In the scenario when there are multiple people contributing to a single remote 
repository, if Git is automatically allowed to sync the remote repository with 
my local one, then one could potentially lose all local changes when such a pull 
request is allowed. Manual pulling allows one to pull commits from a remote 
repository only when one is sure that doing so would not mess with any work done 
locally.

Q. Describe the differences between forks, clones, and branches. When should you use one instead of another?

A. We use fork if we wish to add something to someone else's repository on GitHub 
by working on a copy of that respository on our local machine. We use clone if we wish to work locally on our own GitHub repository. We can also clone an existing 
local repository. We use branches if we wish to work on something that is not ready for the main branch yet.

Q. What is the benefit of having a copy of the last known state of the remote 
stored locally?

A. The benefit of having a copy of the last known state of the remote stored 
locally is that if we modify our local repository and someone else 
pushed changes to the remote during that time, then when we fetch and merge 
conflicting local/master and remote/master branches.

Q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

A. If one uses Git and chooses not to use GitHub, then one can always use GitLab, 
BitBucket, and other such Git websites for collaboration. However, if one chooses 
not to use Git at all, then life would be a lot harder, for sure. In such a 
situation, one would have to use something like DropBox or Google Drive to 
collaborate. Updating would be a lot easier individually, but colloborating would 
be a lot harder!
